{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","handleDelete","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.282483b0.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className='navbar'>\r\n            <h1>The Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\">New Blog</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import { Link } from 'react-router-dom';\r\n\r\nconst BlogList = ({ blogs, title, handleDelete }) => {\r\n    \r\n    return ( \r\n        <div className=\"blog-list\">\r\n            <h2>{ title }</h2>\r\n            {blogs.map((blog) => (\r\n            <div className=\"blog-preview\" key={blog.id}>  \r\n                <Link to={`/blogs/${blog.id}`}>\r\n                    <h2>{ blog.title }</h2>\r\n                    <p>Written by : { blog.author }</p>\r\n                </Link>\r\n            </div>\r\n        ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlogList;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data,setData] = useState(null);\r\n    const [isPending,setIsPending] = useState(true);\r\n    const [error,setError] =useState(null);\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController(); \r\n\r\n        setTimeout(() => {\r\n            fetch(url, { signal: abortCont.signal })\r\n                .then(res => {\r\n                    if(!res.ok) {\r\n                        throw Error('Could not fetch data for the resource');\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => { \r\n                    setData(data);\r\n                    setIsPending(false);\r\n                    setError(null);\r\n                })\r\n                .catch(err => {\r\n                    if(err.name === 'AbortError'){\r\n                        console.log('Fetch Abort');\r\n                    }\r\n                    else{\r\n                        setError(err.message);\r\n                        setIsPending(false);    \r\n                    }\r\n                }) \r\n        });\r\n\r\n        return () => abortCont.abort();\r\n    },[url] );\r\n\r\n    return{ data, isPending, error}\r\n}\r\n\r\nexport default useFetch;","// import { useState, useEffect } from 'react'; \r\nimport BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {\r\n    const { data: blogs , isPending, error}=useFetch('http://localhost:8000/blogs');\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            { error && <div>{ error }</div>}\r\n            { isPending && <div>Loading...</div>}\r\n            {blogs && <BlogList blogs = { blogs } title=\"All Blogs\"  />}            \r\n        </div>\r\n    ); \r\n    \r\n    \r\n}\r\n\r\nexport default Home; ","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Create = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('saumya');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = { title, body, author};\r\n\r\n        setIsPending(true);\r\n\r\n        fetch('http://localhost:8000/blogs', {\r\n            method: 'POST',\r\n            headers: { \"Content-type\": 'application/json' },\r\n            body: JSON.stringify(blog)\r\n        }).then(() => {\r\n            console.log('New blog added');\r\n            setIsPending(false);\r\n            history.push('/');\r\n        })\r\n        \r\n    }\r\n\r\n    return ( \r\n        <div className=\"create\">\r\n            <h2>Add a new Blog</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Blog title:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    required \r\n                    value= { title }\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <label>Blog body:</label>\r\n                <textarea \r\n                    required \r\n                    value= { body }\r\n                    onChange={(e) => setBody(e.target.value)}\r\n                />\r\n                <label>Blog author:</label>\r\n                <select \r\n                    value={ author }\r\n                    onChange={(e) => setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"saumya\">Saumya</option>\r\n                    <option value=\"vatsal\">Vatsal</option>\r\n                    <option value=\"satya\">Satya</option>\r\n                </select>\r\n                { !isPending && <button>Add Blog</button> }\r\n                { isPending && <button disabled>Adding Blog...</button> }                \r\n            </form>\r\n        </div>\r\n    );      \r\n}\r\n\r\nexport default Create;","import { useParams } from 'react-router-dom';\r\nimport useFetch from './useFetch';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst BlogDetails = () => {\r\n    const { id } = useParams();\r\n    const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        fetch('http://localhost:8000/blogs/' + blog.id, {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            history.push('/');\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            { isPending && <div>Loading...</div> }\r\n            { error && <div>{ error }</div> }\r\n            { blog && (\r\n                <article>\r\n                    <h2>{ blog.title }</h2>\r\n                    <p>Written by { blog.author }</p>\r\n                    <div>{ blog.body }</div>\r\n                    <button onClick={handleClick}>Delete</button>\r\n                </article>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlogDetails;","import { Link } from 'react-router-dom'\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className=\"not-found\">\r\n            <h2>Sorry</h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to='/'>Back to the homepage...</Link>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default NotFound;","import'./index.css';\r\nimport Navbar from './Navbar';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'; \r\nimport Create from './Create';\r\nimport BlogDetails from './BlogDetails';\r\nimport NotFound from './NotFound';\r\n\r\n// const title = 'Welcome to the page';\r\n// const count =10;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/create\">\r\n            <Create />\r\n          </Route>\r\n          <Route path=\"/blogs/:id\">\r\n            <BlogDetails />\r\n          </Route>\r\n          <Route path='*'>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n    </Router> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}